/**
 * @license React
 * react.profiling.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
(function(){'use strict';(function(c,x){"object"===typeof exports&&"undefined"!==typeof module?x(exports):"function"===typeof define&&define.amd?define(["exports"],x):(c=c||self,x(c.React={}))})(this,function(c){function x(a){if(null===a||"object"!==typeof a)return null;a=V&&a[V]||a["@@iterator"];return"function"===typeof a?a:null}function w(a,b,e){this.props=a;this.context=b;this.refs=W;this.updater=e||X}function Y(){}function K(a,b,e){this.props=a;this.context=b;this.refs=W;this.updater=e||X}function Z(a,b,
e){var m,d={},c=null,h=null;if(null!=b)for(m in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(c=""+b.key),b)aa.call(b,m)&&!ba.hasOwnProperty(m)&&(d[m]=b[m]);var l=arguments.length-2;if(1===l)d.children=e;else if(1<l){for(var f=Array(l),k=0;k<l;k++)f[k]=arguments[k+2];d.children=f}if(a&&a.defaultProps)for(m in l=a.defaultProps,l)void 0===d[m]&&(d[m]=l[m]);return{$$typeof:y,type:a,key:c,ref:h,props:d,_owner:L.current}}function oa(a,b){return{$$typeof:y,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}
function M(a){return"object"===typeof a&&null!==a&&a.$$typeof===y}function pa(a){var b={"=":"=0",":":"=2"};return"$"+a.replace(/[=:]/g,function(a){return b[a]})}function N(a,b){return"object"===typeof a&&null!==a&&null!=a.key?pa(""+a.key):b.toString(36)}function B(a,b,e,m,d){var c=typeof a;if("undefined"===c||"boolean"===c)a=null;var h=!1;if(null===a)h=!0;else switch(c){case "string":case "number":h=!0;break;case "object":switch(a.$$typeof){case y:case qa:h=!0}}if(h)return h=a,d=d(h),a=""===m?"."+
N(h,0):m,ca(d)?(e="",null!=a&&(e=a.replace(da,"$&/")+"/"),B(d,b,e,"",function(a){return a})):null!=d&&(M(d)&&(d=oa(d,e+(!d.key||h&&h.key===d.key?"":(""+d.key).replace(da,"$&/")+"/")+a)),b.push(d)),1;h=0;m=""===m?".":m+":";if(ca(a))for(var l=0;l<a.length;l++){c=a[l];var f=m+N(c,l);h+=B(c,b,e,f,d)}else if(f=x(a),"function"===typeof f)for(a=f.call(a),l=0;!(c=a.next()).done;)c=c.value,f=m+N(c,l++),h+=B(c,b,e,f,d);else if("object"===c)throw b=String(a),Error("Objects are not valid as a React child (found: "+
("[object Object]"===b?"object with keys {"+Object.keys(a).join(", ")+"}":b)+"). If you meant to render a collection of children, use an array instead.");return h}function C(a,b,e){if(null==a)return a;var c=[],d=0;B(a,c,"","",function(a){return b.call(e,a,d++)});return c}function ra(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=
0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}function O(a,b){var e=a.length;a.push(b);a:for(;0<e;){var c=e-1>>>1,d=a[c];if(0<D(d,b))a[c]=b,a[e]=d,e=c;else break a}}function p(a){return 0===a.length?null:a[0]}function E(a){if(0===a.length)return null;var b=a[0],e=a.pop();if(e!==b){a[0]=e;a:for(var c=0,d=a.length,k=d>>>1;c<k;){var h=2*(c+1)-1,l=a[h],f=h+1,g=a[f];if(0>D(l,e))f<d&&0>D(g,l)?(a[c]=g,a[f]=e,c=f):(a[c]=l,a[h]=e,c=h);else if(f<d&&0>D(g,e))a[c]=g,a[f]=e,c=f;else break a}}return b}
function D(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}function P(a){for(var b=p(r);null!==b;){if(null===b.callback)E(r);else if(b.startTime<=a)E(r),b.sortIndex=b.expirationTime,O(q,b);else break;b=p(r)}}function Q(a){z=!1;P(a);if(!u)if(null!==p(q))u=!0,R(S);else{var b=p(r);null!==b&&T(Q,b.startTime-a)}}function S(a,b){u=!1;z&&(z=!1,ea(A),A=-1);F=!0;var c=k;try{P(b);for(n=p(q);null!==n&&(!(n.expirationTime>b)||a&&!fa());){var m=n.callback;if("function"===typeof m){n.callback=null;
k=n.priorityLevel;var d=m(n.expirationTime<=b);b=v();"function"===typeof d?n.callback=d:n===p(q)&&E(q);P(b)}else E(q);n=p(q)}if(null!==n)var g=!0;else{var h=p(r);null!==h&&T(Q,h.startTime-b);g=!1}return g}finally{n=null,k=c,F=!1}}function fa(){return v()-ha<ia?!1:!0}function R(a){G=a;H||(H=!0mimeType)\r\n    mimeModeMap.set(mimeType, basenameMode)\r\n  }\r\n}\r\n\r\nfunction guessMimeType(contents: ReadonlyArray<string>) {\r\n  const firstLine = contents[0]\r\n\r\n  if (firstLine.startsWith('<?xml')) {\r\n    return 'text/xml'\r\n  }\r\n\r\n  if (firstLine.startsWith('#!')) {\r\n    const m = /^#!.*?(ts-node|node|bash|sh|python(?:[\\d.]+)?)/g.exec(firstLine)\r\n\r\n    if (m) {\r\n      switch (m[1]) {\r\n        case 'ts-node':\r\n          return 'text/typescript'\r\n        case 'node':\r\n          return 'text/javascript'\r\n        case 'sh':\r\n        case 'bash':\r\n          return 'text/x-sh'\r\n        case 'perl':\r\n          return 'text/x-perl'\r\n      }\r\n\r\n      if (m[1].startsWith('python')) {\r\n        return 'text/x-python'\r\n      }\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nasync function detectMode(\r\n  request: IHighlightRequest\r\n): Promise<CodeMirror.Mode<{}> | null> {\r\n  const mimeType =\r\n    extensionMIMEMap.get(request.extension.toLowerCase()) ||\r\n    basenameMIMEMap.get(request.basename.toLowerCase()) ||\r\n    guessMimeType(request.contentLines)\r\n\r\n  if (!mimeType) {\r\n    return null\r\n  }\r\n\r\n  const modeDefinition = mimeModeMap.get(mimeType)\r\n\r\n  if (modeDefinition === undefined) {\r\n    return null\r\n  }\r\n\r\n  await modeDefinition.install()\r\n\r\n  return getMode({}, mimeType) || null\r\n}\r\n\r\nfunction getModeName(mode: CodeMirror.Mode<{}>): string | null {\r\n  const name = (mode as any).name\r\n  return name && typeof name === 'string' ? name : null\r\n}\r\n\r\n/**\r\n * Helper method to determine the name of the innermost (i.e. current)\r\n * mode. Think of this as an abstraction over CodeMirror's innerMode\r\n * with added type guards.\r\n */\r\nfunction getInnerModeName(\r\n  mode: CodeMirror.Mode<{}>,\r\n  state: any\r\n): string | null {\r\n  const inner = innerMode(mode, state)\r\n  return inner && inner.mode ? getModeName(inner.mode) : null\r\n}\r\n\r\n/**\r\n * Extract the next token from the line stream or null if no token\r\n * could be extracted from the current position in the line stream.\r\n *\r\n * This method is more or less equal to the readToken method in\r\n * CodeMirror but since the readToken class in CodeMirror isn't included\r\n * in the Node runmode we're not able to use it.\r\n *\r\n * Worth noting here is that we're also replicated the workaround for\r\n * modes that aren't adhering to the rules of never returning without\r\n * advancing the line stream by trying it again (up to ten times). See\r\n * https://github.com/codemirror/CodeMirror/commit/2c60a2 for more\r\n * details on that.\r\n *\r\n * @param mode         The current (outer) mode\r\n * @param stream       The StringStream for the current line\r\n * @param state        The current mode state (if any)\r\n * @param addModeClass Whether or not to append the current (inner) mode name\r\n *                     as an extra CSS class to the token, indicating the mode\r\n *                     that produced it, prefixed with \"cm-m-\". For example,\r\n *                     tokens from the XML mode will get the cm-m-xml class.\r\n */\r\nfunction readToken(\r\n  mode: CodeMirror.Mode<{}>,\r\n  stream: StringStream,\r\n  state: any,\r\n  addModeClass: boolean\r\n): string | null {\r\n  for (let i = 0; i < 10; i++) {\r\n    const innerModeName = addModeClass ? getInnerModeName(mode, state) : null\r\n    const token = mode.token(stream, state)\r\n\r\n    if (stream.pos > stream.start) {\r\n      return token && innerModeName ? `m-${innerModeName} ${token}` : token\r\n    }\r\n  }\r\n\r\n  throw new Error(`Mode ${getModeName(mode)} failed to advance stream.`)\r\n}\r\n\r\nonmessage = async (ev: MessageEvent) => {\r\n  const request = ev.data as IHighlightRequest\r\n\r\n  const tabSize = request.tabSize || 4\r\n  const addModeClass = request.addModeClass === true\r\n\r\n  const mode = await detectMode(request)\r\n\r\n  if (!mode) {\r\n    postMessage({})\r\n    return\r\n  }\r\n\r\n  const lineFilter =\r\n    request.lines && request.lines.length\r\n      ? new Set<number>(request.lines)\r\n      : null\r\n\r\n  // If we've got a set of requested lines we can keep track of the maximum\r\n  // line we need so that we can bail immediately when we've reached it.\r\n  const maxLine = lineFilter ? Math.max(...lineFilter) : null\r\n\r\n  const lines = request.contentLines.concat()\r\n  const state: any = mode.startState ? mode.startState() : null\r\n\r\n  const tokens: ITokens = {}\r\n\r\n  for (const [ix, line] of lines.entries()) {\r\n    // No need to continue after the max line\r\n    if (maxLine !== null && ix > maxLine) {\r\n      break\r\n    }\r\n\r\n    // For stateless modes we can optimize by only running\r\n    // the tokenizer over lines we care about.\r\n    if (lineFilter && !state) {\r\n      if (!lineFilter.has(ix)) {\r\n        continue\r\n      }\r\n    }\r\n\r\n    if (!line.length) {\r\n      if (mode.blankLine) {\r\n        mode.blankLine(state)\r\n      }\r\n\r\n      continue\r\n    }\r\n\r\n    const lineCtx = {\r\n      lines,\r\n      line: ix,\r\n      lookAhead: (n: number) => lines[ix + n],\r\n    }\r\n    const lineStream = new StringStream(line, tabSize, lineCtx)\r\n\r\n    while (!lineStream.eol()) {\r\n      const token = readToken(mode, lineStream, state, addModeClass)\r\n\r\n      if (token && (!lineFilter || lineFilter.has(ix))) {\r\n        tokens[ix] = tokens[ix] || {}\r\n        tokens[ix][lineStream.start] = {\r\n          length: lineStream.pos - lineStream.start,\r\n          token,\r\n        }\r\n      }\r\n\r\n      lineStream.start = lineStream.pos\r\n    }\r\n  }\r\n\r\n  postMessage(tokens)\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n","// getDefaultExport function for compatibilit